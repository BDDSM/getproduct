
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресСервера = "localhost";
	Порт = 11218
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

&НаСервере
Функция ДанныеОПродукте(АдресСервера, Порт, Штрихкод, Лучший = Истина) Экспорт
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	
	URL = СтрШаблон("/api/barcode/%1/%2", ?(Лучший, "thebest", "first"), Штрихкод);
	
	Соединение = Новый HTTPСоединение(АдресСервера, Порт);
	HTTPЗапрос = Новый HTTPЗапрос(URL, Заголовки);
	
	HTTPОтвет = Соединение.Получить(HTTPЗапрос);
	Если HTTPОтвет.КодСостояния = 200 Тогда
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку());
		
		ДанныеССервера = ПрочитатьJSON(ЧтениеJSON);
		
		Возврат ДанныеССервера;
		
	Иначе
		ТекстОшибки = HTTPОтвет.ПолучитьТелоКакСтроку();
		ВызватьИсключение ПолучитьТекстОшибки(ТекстОшибки); 
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура URLНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗапуститьПриложениеАсинх(АдресИсточника);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Лучший(Команда)
	
	Если Не ЗначениеЗаполнено(Штрихкод) Тогда
		ТекстОшибки = "Штрихкод не заполнен";
		Возврат;
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(АдресСервера) Тогда
		ТекстОшибки = "Не заполнен адрес сервера";
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Порт) Тогда
		ТекстОшибки = "Не заполнен порт";
		Возврат;
	КонецЕсли;
	
	Попытка
		ДанныеССервера = ДанныеОПродукте(АдресСервера, Порт, Штрихкод, Истина);
		ЗаполнитьФормуПолученнымиДанными(ДанныеССервера);
	Исключение
		Инфо = ИнформацияОбОшибке();
		ТекстОшибки = Инфо.Описание;
	КонецПопытки
	
КонецПроцедуры

&НаКлиенте
Процедура Первый(Команда)
	
	Если Не ЗначениеЗаполнено(Штрихкод) Тогда
		ТекстОшибки = "Штрихкод не заполнен";
		Возврат;
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(АдресСервера) Тогда
		ТекстОшибки = "Не заполнен адрес сервера";
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Порт) Тогда
		ТекстОшибки = "Не заполнен порт";
		Возврат;
	КонецЕсли;
	
	Попытка
		ДанныеССервера = ДанныеОПродукте(АдресСервера, Порт, Штрихкод, Ложь);
		ЗаполнитьФормуПолученнымиДанными(ДанныеССервера);
	Исключение
		Инфо = ИнформацияОбОшибке();
		ТекстОшибки = Инфо.Описание;
	КонецПопытки
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьФормуПолученнымиДанными(ДанныеССервера)
	
	Артикул = ДанныеССервера.article;
	Наименование = ДанныеССервера.name;
	Описание = ДанныеССервера.description;
	Производитель = ДанныеССервера.manufacturer;
	ЕдиницаИзмерения = ДанныеССервера.unit;
	Вес = ДанныеССервера.weight;
	АдресИсточника = ДанныеССервера.url;
	
	Если ЗначениеЗаполнено(ДанныеССервера.picture) Тогда
		ДвоичныеДанные = Base64Значение(ДанныеССервера.picture);
		АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
		Изображение = АдресВоВременномХранилище;
	Иначе
		Изображение = "";
	КонецЕсли;
	
	ТекстОшибки = "";
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекстОшибки(ТекстОшибки)
	
	Попытка
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ТекстОшибки);
		
		СтруктураОшибки = ПрочитатьJSON(ЧтениеJSON);
		
		Возврат СтруктураОшибки.error;
		
	Исключение
	КонецПопытки;
	
	Возврат ТекстОшибки;
	
КонецФункции

#КонецОбласти